1.
子进程的x值与父进程的x值相同, 父进程的x改变后, 子进程的x值不变; 相反的, 子进程的x值改变后, 父进程的x值不变.

2.
都可以访问open()返回的文件描述符. 可能由于本例中使用的写入的字符串较短, 两个进程先后向文件中写入字符串, 未发生异常, 但是总是父进程写入后, 子进程再写入.

3.
使用一个长循环让父进程等待

4.
为支持不同的参数, 需要有多种类型不同的exec()函数, 而 C 语言不支持函数重载, 所以只能使用不同的函数名.

5.
wait()返回等待的子进程的pid (可能是最后一个结束的子进程).

6.
当父进程具有多个子进程, 或等待其他组内的进程, 或者需要指定options的选项时, waitpid()会有作用.

7.
关闭标准输出后, 子进程的 printf 不输出任何东西.
